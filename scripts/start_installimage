#!/bin/bash

##
# created by Tim Meusel
# with help from Silvio Knizek
##

# this script will download our installimage config

# get our config
config='/usr/local/bin/config_live.sh'
if [ -n "$config" ] && [ -e "$config" ]; then
  # shellcheck disable=SC1090
  . "${config}"
else
  echo "Error: ${config} file isn't available"
  exit 1
fi

set -e -u

# currently we need the mac from the interface we used for booting, not the first one
#mac="$(ifdata -ph eth0 | awk '{gsub(":",""); print tolower($1)}')"
mac=$(awk 'BEGIN {FS="="; RS=" ";} { if ($1 ~ /BOOTIF/) {gsub(/^[^-]+-/, "", $2); gsub(/-/, ":", $2); print tolower($2)}}' /proc/cmdline)

if [ -n "$CONFIG_PROTO" ] && [ -n "$CONFIG_PORT" ] && [ -n "$CONFIG_SERVER" ] && [ -n "$CONFIG_PATH" ] && [ -n "$mac" ] && [ -n "$CONFIG_FILE" ]; then
  url="${CONFIG_PROTO}://${CONFIG_SERVER}:${CONFIG_PORT}/${CONFIG_PATH}/${mac}/${CONFIG_FILE}"
else
  echo "One of the needed config options is missing"
  exit 1
fi

# we need to allow variable expansion if someone tries to attach any params to the URL
# shellcheck disable=SC2086
curl --silent $url > /root/config.cfg
if [ $? != 0 ]; then
  echo "failed to download config"
  exit 1
fi

# start installimage with our config
/root/.installimage/installimage.in_screen -c config.cfg -a
